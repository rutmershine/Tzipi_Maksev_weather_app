{"ast":null,"code":"var _jsxFileName = \"F:\\\\programming\\\\\\u05E8\\u05D0\\u05D9\\u05D5\\u05E0\\u05D5\\u05EA\\\\project\\\\project\\\\src\\\\WeatherForFavorite.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { get_from_axios } from './actions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 140,\n    width: 100\n  },\n  control: {\n    padding: theme.spacing(2)\n  }\n}));\n\nfunction WeatherForFavorite(props) {\n  _s();\n\n  var _props$currentWeather, _props$currentWeather2, _props$currentWeather3, _props$currentWeather4;\n\n  const classes = useStyles();\n  debugger;\n  console.log(props);\n  useEffect(() => {\n    props.get_from_axios(props.cityKey);\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"girdToday\",\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        className: `${classes.paper} today`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"todayInToday\",\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: (_props$currentWeather = props.currentWeather) === null || _props$currentWeather === void 0 ? void 0 : (_props$currentWeather2 = _props$currentWeather.LocalObservationDateTime) === null || _props$currentWeather2 === void 0 ? void 0 : _props$currentWeather2.substring(0, 10)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"todayDegree\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"degreesSpan\",\n            children: \" C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), (_props$currentWeather3 = props.currentWeather) === null || _props$currentWeather3 === void 0 ? void 0 : (_props$currentWeather4 = _props$currentWeather3.Temperature) === null || _props$currentWeather4 === void 0 ? void 0 : _props$currentWeather4.Metric.Value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cityName\",\n        children: props.cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WeatherForFavorite, \"OAQf9SHEQQsOOZKjohcuI3tGtQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c = WeatherForFavorite;\n\nconst mapStateToProps = state => {\n  return {\n    currentWeather: state.currentWeather\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    get_from_axios: location => dispatch(get_from_axios(location))\n  }; // return {get_from_axios: (cur) => dispatch(get_from_axios(cur)) }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherForFavorite);\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForFavorite\");","map":{"version":3,"sources":["F:/programming/ראיונות/project/project/src/WeatherForFavorite.js"],"names":["React","useState","useContext","useEffect","makeStyles","Grid","Paper","get_from_axios","connect","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","WeatherForFavorite","props","classes","console","log","cityKey","currentWeather","LocalObservationDateTime","substring","Temperature","Metric","Value","cityName","mapStateToProps","state","mapDispatchToProps","dispatch","location"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GAD+B;AAIrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE,GADL;AAEHC,IAAAA,KAAK,EAAE;AAFJ,GAJ8B;AAQrCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AADJ;AAR4B,CAAZ,CAAD,CAA5B;;AAaA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAAA;;AAC/B,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,KAAK,CAACb,cAAN,CAAqBa,KAAK,CAACI,OAA3B;AACH,GAFQ,CAAT;AAIA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,cAAc,EAAC,QAA/B;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,SAAS,EAAG,GAAEH,OAAO,CAACR,KAAM,QAAnC;AAAA,gCACQ;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAGQ;AAAA,6CAAOO,KAAK,CAACK,cAAb,oFAAO,sBAAsBC,wBAA7B,2DAAO,uBAAgDC,SAAhD,CAA0D,CAA1D,EAA6D,EAA7D;AAAP;AAAA;AAAA;AAAA;AAAA,gBAHR,eAIQ;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,4BAEKP,KAAK,CAACK,cAFX,qFAEK,uBAAsBG,WAF3B,2DAEK,uBAAmCC,MAAnC,CAA0CC,KAF/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJR;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAWI;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA,kBAA4BV,KAAK,CAACW;AAAlC;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAzBQZ,kB;UACWV,S;;;KADXU,kB;;AA0BT,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHR,IAAAA,cAAc,EAAEQ,KAAK,CAACR;AADnB,GAAP;AAGH,CAJD;;AAKA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACH5B,IAAAA,cAAc,EAAG6B,QAAD,IAAcD,QAAQ,CAAC5B,cAAc,CAAC6B,QAAD,CAAf;AADnC,GAAP,CADmC,CAInC;AACH,CALD;;AAMA,eAAe5B,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,kBAA7C,CAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { get_from_axios } from './actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        height: 140,\r\n        width: 100,\r\n    },\r\n    control: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction WeatherForFavorite(props) {\r\n    const classes = useStyles();\r\n    debugger;\r\n    console.log(props)\r\n    \r\n    useEffect(() => {\r\n        props.get_from_axios(props.cityKey)\r\n    })\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\" >\r\n            <div className=\"girdToday\">\r\n            <Paper className={`${classes.paper} today`}>\r\n                    <span className=\"todayInToday\">Today</span>\r\n                    {/* <span>date: </span> */}\r\n                    <span>{props.currentWeather?.LocalObservationDateTime?.substring(0, 10)}</span>\r\n                    <span className=\"todayDegree\">\r\n                        <span className=\"degreesSpan\"> C:</span>\r\n                        {props.currentWeather?.Temperature?.Metric.Value}</span>\r\n\r\n\r\n                </Paper>\r\n                <span className=\"cityName\">{props.cityName}</span>\r\n            </div>\r\n        </Grid>)\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentWeather: state.currentWeather,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        get_from_axios: (location) => dispatch(get_from_axios(location)),\r\n    }\r\n    // return {get_from_axios: (cur) => dispatch(get_from_axios(cur)) }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherForFavorite);"]},"metadata":{},"sourceType":"module"}