{"ast":null,"code":"var _jsxFileName = \"F:\\\\programming\\\\\\u05E8\\u05D0\\u05D9\\u05D5\\u05E0\\u05D5\\u05EA\\\\project\\\\project\\\\src\\\\WeatherCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { get_from_axios, pushToFavorites } from './actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  }\n});\nlet count = 0;\nlet location;\nlet data = {}; // export default function ImgMediaCard(props) {\n\nfunction WeatherCard(props) {\n  _s();\n\n  var _props$favorites$prop, _props$favorites$prop2, _props$favorite$props, _props$favorites$prop3;\n\n  useEffect(() => {\n    location = props.cityKey;\n    props.get_from_axios(location);\n    data = props.currentWeather;\n    props.pushToFavorites(data);\n  }, []); // let [myCurrent, setMyCurrent] = useState('');\n\n  let myCurrent = '';\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: `${classes.root} small_card`,\n    children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        alt: \"Contemplative Reptile\",\n        height: \"140\" //   height=\"10\"\n        ,\n        image: \"./pics/night.png\",\n        title: \"Contemplative Reptile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"h2\",\n          children: props.selectedCityName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: props.favorites ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Temperature: \", (_props$favorites$prop = props.favorites[props.index]) === null || _props$favorites$prop === void 0 ? void 0 : (_props$favorites$prop2 = _props$favorites$prop.Temperature) === null || _props$favorites$prop2 === void 0 ? void 0 : _props$favorites$prop2.Metric.Value]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: (_props$favorite$props = props.favorite[props.index]) === null || _props$favorite$props === void 0 ? void 0 : _props$favorite$props.WeatherText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: ((_props$favorites$prop3 = props.favorites[props.index]) === null || _props$favorites$prop3 === void 0 ? void 0 : _props$favorites$prop3.IsDayTime) ? 'Day' : 'Night'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"no data!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        children: \"ADD TO FAVORITES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeatherCard, \"v7TDUGheAkBmKIQo9Gj65jeexyQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = WeatherCard;\n\nconst mapStateToProps = state => {\n  return {\n    favorites: state.favorites,\n    currentWeather: state.currentWeather\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    pushToFavorites: favFromLocal => dispatch(pushToFavorites(favFromLocal)),\n    get_from_axios: location => dispatch(get_from_axios(location))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"sources":["F:/programming/ראיונות/project/project/src/WeatherCard.js"],"names":["React","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","connect","useEffect","useState","get_from_axios","pushToFavorites","useStyles","root","maxWidth","count","location","data","WeatherCard","props","cityKey","currentWeather","myCurrent","classes","selectedCityName","favorites","index","Temperature","Metric","Value","favorite","WeatherText","IsDayTime","mapStateToProps","state","mapDispatchToProps","dispatch","favFromLocal"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from 'react'\r\nimport { get_from_axios, pushToFavorites } from './actions'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n});\r\n\r\nlet count = 0;\r\nlet location\r\nlet data = {}\r\n\r\n// export default function ImgMediaCard(props) {\r\nfunction WeatherCard(props) {\r\n\r\n  useEffect(() =>{\r\n    location = props.cityKey\r\n    props.get_from_axios(location)\r\n    data = props.currentWeather\r\n    props.pushToFavorites(data)\r\n\r\n  }, [])\r\n\r\n  // let [myCurrent, setMyCurrent] = useState('');\r\n  let myCurrent = '';\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={`${classes.root} small_card`}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"140\"\r\n          //   height=\"10\"\r\n          image=\"./pics/night.png\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.selectedCityName}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {/* Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n            across all continents except Antarctica */}\r\n            {/* <h1>Temperature: {props.currentWeather.Temperature?.Metric.Value}</h1>\r\n            <h2>{props.currentWeather.WeatherText}</h2>\r\n            <h2>{props.currentWeather.IsDayTime ? 'Day' : 'Night'}</h2> */}\r\n\r\n            {/* good */}\r\n            {/* <h1>Temperature: {props.currentWeather?.Temperature?.Metric.Value}</h1>\r\n            <h2>{props.currentWeather?.WeatherText}</h2>\r\n            <h2>{props.currentWeather?.IsDayTime ? 'Day' : 'Night'}</h2> */}\r\n\r\n\r\n            {/* <h1>Temperature: {myCurrent?.Temperature?.Metric.Value}</h1>\r\n            <h2>{myCurrent?.WeatherText}</h2>\r\n            <h2>{myCurrent?.IsDayTime ? 'Day' : 'Night'}</h2> */}\r\n\r\n            {props.favorites ?\r\n              <div>\r\n\r\n                <h1>Temperature: {props.favorites[props.index]?.Temperature?.Metric.Value}</h1>\r\n                <h2>{props.favorite[props.index]?.WeatherText}</h2>\r\n                <h2>{props.favorites[props.index]?.IsDayTime ? 'Day' : 'Night'}</h2>\r\n              </div> : <h2>no data!</h2>\r\n            }\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          ADD TO FAVORITES\r\n        </Button>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button> */}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    favorites: state.favorites,\r\n    currentWeather: state.currentWeather,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    pushToFavorites: (favFromLocal) => dispatch(pushToFavorites(favFromLocal)),\r\n    get_from_axios: (location) => dispatch(get_from_axios(location)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherCard);\r\n"]},"metadata":{},"sourceType":"module"}