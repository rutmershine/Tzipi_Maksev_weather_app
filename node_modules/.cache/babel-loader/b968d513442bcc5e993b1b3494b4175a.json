{"ast":null,"code":"var _jsxFileName = \"F:\\\\programming\\\\\\u05E8\\u05D0\\u05D9\\u05D5\\u05E0\\u05D5\\u05EA\\\\project\\\\project\\\\src\\\\Favorites.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState, useContext, useStyles } from 'react';\nimport { connect } from 'react-redux';\nimport { get_from_axios } from './actions';\nimport WeatherToday from './WeatherToday';\nimport WeatherForFavorite from './WeatherForFavorite';\nimport Menu from './Menu';\nimport { pushToFavorites } from './actions';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Favorites(props) {\n  _s();\n\n  // const favorites = []\n  // let favoritesData = []\n  let location = '215854';\n\n  const onFavClick = f => {\n    // console.log('hello favorite:)')\n    // console.log('f:', f);\n    // console.log('f:', f.location);\n    alert('location:', f.location);\n    handleClick();\n  };\n\n  let history = useHistory();\n\n  const handleClick = () => {\n    // console.log(history)\n    history.push(\"/\"); // history.replace({pathname: '/'})\n    // navigation.navigate('/', {\n    //     itemId: 86,\n    //     otherParam: 'anything you want here',\n    // });\n  }; // const classes = useStyles();\n  // const fetchFavoritesCities = () => {\n  //     if (localStorage.favorites) {\n  //         favorites = JSON.parse(localStorage.getItem('favorites'));\n  //         debugger;\n  //     }\n  // }\n  // useEffect(() => {\n  //     fetchFavoritesCities()\n  //     debugger;\n  // }, [])\n\n\n  const favoritesFromLocal = localStorage['favorites'] ? JSON.parse(localStorage['favorites']) : [];\n  useEffect(() => {\n    // console.log(favoritesFromLocal)\n    favoritesFromLocal.map(fav => {\n      location = fav.cityKey;\n      console.log(location);\n      props.get_from_axios(location, 1); // data = props.currentWeather\n      // console.log(data)\n      // props.pushToFavorites(data)\n    });\n  }, []); // useEffect(() =>{\n  //     console.log(props.pushToFavorites.length+\"   000000000000000000\")\n  // }, [props.pushToFavorites])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"FAVORITES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), (console.log('props.favorites', props.favorites), console.log('local', favoritesFromLocal), props.favorites.map((fav, val) => {\n      var _favoritesFromLocal$v, _favoritesFromLocal$v2;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => onFavClick(fav),\n        children: /*#__PURE__*/_jsxDEV(WeatherForFavorite, {\n          currentWeather: fav,\n          cityName: (_favoritesFromLocal$v = favoritesFromLocal[val]) === null || _favoritesFromLocal$v === void 0 ? void 0 : _favoritesFromLocal$v.cityName,\n          cityKey: (_favoritesFromLocal$v2 = favoritesFromLocal[val]) === null || _favoritesFromLocal$v2 === void 0 ? void 0 : _favoritesFromLocal$v2.cityKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this);\n    }))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this) // \n  ;\n}\n\n_s(Favorites, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = Favorites;\n\nconst mapStateToProps = state => {\n  return {\n    favorites: state.favorites,\n    currentWeather: state.currentWeather\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    pushToFavorites: favFromLocal => dispatch(pushToFavorites(favFromLocal)),\n    get_from_axios: (location, fav) => dispatch(get_from_axios(location, fav))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\n\nvar _c;\n\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"sources":["F:/programming/ראיונות/project/project/src/Favorites.js"],"names":["React","createContext","useEffect","useState","useContext","useStyles","connect","get_from_axios","WeatherToday","WeatherForFavorite","Menu","pushToFavorites","useHistory","Favorites","props","location","onFavClick","f","alert","handleClick","history","push","favoritesFromLocal","localStorage","JSON","parse","map","fav","cityKey","console","log","favorites","val","cityName","mapStateToProps","state","currentWeather","mapDispatchToProps","dispatch","favFromLocal"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState, useContext, useStyles } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { get_from_axios } from './actions'\r\nimport WeatherToday from './WeatherToday'\r\nimport WeatherForFavorite from './WeatherForFavorite';\r\nimport Menu from './Menu'\r\nimport { pushToFavorites } from './actions';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Favorites(props) {\r\n    // const favorites = []\r\n    // let favoritesData = []\r\n    let location = '215854'\r\n    const onFavClick = (f) => {\r\n        // console.log('hello favorite:)')\r\n        // console.log('f:', f);\r\n        // console.log('f:', f.location);\r\n        alert('location:', f.location)\r\n        handleClick();\r\n    }\r\n    let history = useHistory();\r\n    const handleClick = () => {\r\n        // console.log(history)\r\n        history.push(\"/\");\r\n        // history.replace({pathname: '/'})\r\n        // navigation.navigate('/', {\r\n        //     itemId: 86,\r\n        //     otherParam: 'anything you want here',\r\n        // });\r\n    }\r\n\r\n    // const classes = useStyles();\r\n\r\n    // const fetchFavoritesCities = () => {\r\n    //     if (localStorage.favorites) {\r\n    //         favorites = JSON.parse(localStorage.getItem('favorites'));\r\n    //         debugger;\r\n    //     }\r\n    // }\r\n    // useEffect(() => {\r\n    //     fetchFavoritesCities()\r\n    //     debugger;\r\n    // }, [])\r\n    const favoritesFromLocal = localStorage['favorites'] ? JSON.parse(localStorage['favorites']) : [];\r\n    useEffect(() => {\r\n        // console.log(favoritesFromLocal)\r\n        favoritesFromLocal.map((fav) => {\r\n            location = fav.cityKey\r\n            console.log(location)\r\n            props.get_from_axios(location, 1)\r\n            // data = props.currentWeather\r\n            // console.log(data)\r\n            // props.pushToFavorites(data)\r\n        })\r\n    }, [])\r\n\r\n    // useEffect(() =>{\r\n    //     console.log(props.pushToFavorites.length+\"   000000000000000000\")\r\n    // }, [props.pushToFavorites])\r\n\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            <h1>FAVORITES</h1>\r\n            {\r\n                console.log('props.favorites', props.favorites),\r\n                console.log('local', favoritesFromLocal),\r\n                props.favorites.map((fav, val) => (\r\n                    <div onClick={() => onFavClick(fav)}>\r\n                        <WeatherForFavorite currentWeather={fav} cityName={favoritesFromLocal[val]?.cityName}\r\n                            cityKey={favoritesFromLocal[val]?.cityKey} />\r\n                        {/* <WeatherToday weatherToday={fav} cityName={favoritesFromLocal[val]?.cityName}\r\n                     cityKey={favoritesFromLocal[val]?.cityKey} /> */}\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n        // \r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        favorites: state.favorites,\r\n        currentWeather: state.currentWeather,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        pushToFavorites: (favFromLocal) => dispatch(pushToFavorites(favFromLocal)),\r\n        get_from_axios: (location, fav) => dispatch(get_from_axios(location, fav)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);"]},"metadata":{},"sourceType":"module"}