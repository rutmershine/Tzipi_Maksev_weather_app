{"ast":null,"code":"var _jsxFileName = \"F:\\\\programming\\\\\\u05E8\\u05D0\\u05D9\\u05D5\\u05E0\\u05D5\\u05EA\\\\project\\\\project\\\\src\\\\SpacingGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Paper from '@material-ui/core/Paper';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport IconButton from '@material-ui/core/IconButton';\nimport { telAvivContext } from './TelAvivContext';\nimport { forFiveTelAvivContext } from './ForFiveTelAvivContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 140,\n    width: 100\n  },\n  control: {\n    padding: theme.spacing(2)\n  }\n}));\nexport default function SpacingGrid(props) {\n  _s();\n\n  var _props$weatherToday$T;\n\n  // const w = useContext(forFiveTelAvivContext);\n  // const [weatherDays, setWeatherDays] = useState([]);\n  // const w = useContext(telAvivContext);\n  // const [weatherToday, setWeatherToday] = useState([]);\n  // const [degreesToday, setDegreesToday] = useState([23.5]);\n  // const [city, setCity] = useState('Tel Aviv');\n  // const [degreesForFiveDays, setDegreesForFiveDays] = useState([21, 22, 23, 24, 25]);\n  const [spacing, setSpacing] = React.useState(7); // שליי\n  // const [degreesToday, setDegreesToday] = useState();\n  // \n\n  const classes = useStyles(); // useEffect(() => {\n  //   setWeatherToday(w)\n  // }, [w]);\n  // useEffect(() => {\n  //   setWeatherDays(w)\n  // }, [w])\n\n  const handleChange = event => {\n    setSpacing(Number(event.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    spacing: 2,\n    children: [console.log(props), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          className: `${classes.paper} today`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"date: \", props.weatherToday.LocalObservationDateTime.substring(0, 10)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" C: \", (_props$weatherToday$T = props.weatherToday.Temperature) === null || _props$weatherToday$T === void 0 ? void 0 : _props$weatherToday$T.Metric.Value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          className: \"addToFavorite\",\n          \"aria-label\": \"favorite\",\n          children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        spacing: spacing,\n        children: [0, 1, 2, 3, 4].map(value => {\n          var _props$weatherForFive, _props$weatherForFive2;\n\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: `${classes.paper} weatherToNextDay`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"date: \", props.weatherForFive.Headline.EffectiveDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"min: \", (_props$weatherForFive = props.weatherForFive.Temperature) === null || _props$weatherForFive === void 0 ? void 0 : _props$weatherForFive.Minimum.Value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"max: \", (_props$weatherForFive2 = props.weatherForFive.Temperature) === null || _props$weatherForFive2 === void 0 ? void 0 : _props$weatherForFive2.Minimum.Value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SpacingGrid, \"DW4HMi/HjBpc1vkkN6ucRyZUT4k=\", false, function () {\n  return [useStyles];\n});\n\n_c = SpacingGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpacingGrid\");","map":{"version":3,"sources":["F:/programming/ראיונות/project/project/src/SpacingGrid.js"],"names":["React","useState","useContext","useEffect","makeStyles","Grid","FormLabel","FormControlLabel","RadioGroup","Radio","Paper","FavoriteIcon","IconButton","telAvivContext","forFiveTelAvivContext","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","SpacingGrid","props","setSpacing","classes","handleChange","event","Number","target","value","console","log","weatherToday","LocalObservationDateTime","substring","Temperature","Metric","Value","map","weatherForFive","Headline","EffectiveDate","Minimum"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { telAvivContext } from './TelAvivContext'\r\nimport { forFiveTelAvivContext } from './ForFiveTelAvivContext'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SpacingGrid(props) {\r\n  // const w = useContext(forFiveTelAvivContext);\r\n  // const [weatherDays, setWeatherDays] = useState([]);\r\n  // const w = useContext(telAvivContext);\r\n  // const [weatherToday, setWeatherToday] = useState([]);\r\n  // const [degreesToday, setDegreesToday] = useState([23.5]);\r\n  // const [city, setCity] = useState('Tel Aviv');\r\n  // const [degreesForFiveDays, setDegreesForFiveDays] = useState([21, 22, 23, 24, 25]);\r\n  const [spacing, setSpacing] = React.useState(7);\r\n  // שליי\r\n  // const [degreesToday, setDegreesToday] = useState();\r\n  // \r\n  const classes = useStyles();\r\n\r\n  // useEffect(() => {\r\n  //   setWeatherToday(w)\r\n  // }, [w]);\r\n  // useEffect(() => {\r\n  //   setWeatherDays(w)\r\n  // }, [w])\r\n  const handleChange = (event) => {\r\n    setSpacing(Number(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={2}>\r\n      {console.log(props)}\r\n      {/* {console.log(weatherDays)} */}\r\n      {/* {weatherToday? console.log(weatherToday[0]): ''} */}\r\n      {/* {console.log(weatherToday[0]['Temperature'])} */}\r\n      <Grid item xs={12}>\r\n        <Grid container justifyContent=\"center\" >\r\n          <Paper className={`${classes.paper} today`}>\r\n            <span>date: {props.weatherToday.LocalObservationDateTime.substring(0, 10)}</span>\r\n            <span> C: {props.weatherToday.Temperature?.Metric.Value}</span>\r\n          </Paper>\r\n          <IconButton className=\"addToFavorite\" aria-label=\"favorite\">\r\n            <FavoriteIcon />\r\n          </IconButton>\r\n\r\n        </Grid>\r\n        <Grid container justifyContent=\"center\" spacing={spacing}>\r\n          {[0, 1, 2, 3, 4].map((value) => (\r\n            <Grid key={value} item>\r\n              <Paper className={`${classes.paper} weatherToNextDay`}>\r\n                <span>date: {props.weatherForFive.Headline.EffectiveDate}</span>\r\n                <span>min: {props.weatherForFive.Temperature?.Minimum.Value}</span>\r\n                <span>max: {props.weatherForFive.Temperature?.Minimum.Value}</span>\r\n              </Paper>\r\n\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n      {/* <Grid item xs={12}>\r\n        <Paper className={classes.control}>\r\n          <Grid container>\r\n            <Grid item>\r\n              <FormLabel>spacing</FormLabel>\r\n              <RadioGroup\r\n                name=\"spacing\"\r\n                aria-label=\"spacing\"\r\n                value={spacing.toString()}\r\n                onChange={handleChange}\r\n                row\r\n              >\r\n                {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((value) => (\r\n                  <FormControlLabel\r\n                    key={value}\r\n                    value={value.toString()}\r\n                    control={<Radio />}\r\n                    label={value.toString()}\r\n                  />\r\n                ))}\r\n              </RadioGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid> */}\r\n    </Grid>\r\n\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}