{"ast":null,"code":"var _jsxFileName = \"F:\\\\programming\\\\\\u05E8\\u05D0\\u05D9\\u05D5\\u05E0\\u05D5\\u05EA\\\\project\\\\project\\\\src\\\\Favorites.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState, useContext, useStyles } from 'react'; // import AutomaticCities from './AutomaticCities';\n\nimport { connect } from 'react-redux';\nimport { get_from_axios } from './actions';\nimport WeatherToday from './WeatherToday';\nimport Try from './Try';\nimport WeatherForFavorite from './WeatherForFavorite';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Favorites({\n  currentWeather,\n  get_from_axios\n}) {\n  _s();\n\n  const classes = useStyles();\n  let favorites = [];\n  let favoritesData = [];\n  let location = '215854';\n\n  const fetchFavoritesCities = () => {\n    if (localStorage.favorites) {\n      favorites = JSON.parse(localStorage.getItem('favorites'));\n      debugger;\n    }\n  };\n\n  useEffect(() => {\n    fetchFavoritesCities();\n    debugger;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [0, 1, 2, 3, 4].map(value => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: `${classes.paper} weatherToNextDay`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this)\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Favorites, \"OAQf9SHEQQsOOZKjohcuI3tGtQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Favorites;\n\nconst mapStateToProps = state => {\n  return {\n    currentWeather: state.currentWeather\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    get_from_axios: location => dispatch(get_from_axios(location))\n  }; // return {get_from_axios: (cur) => dispatch(get_from_axios(cur)) }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\n\nvar _c;\n\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"sources":["F:/programming/ראיונות/project/project/src/Favorites.js"],"names":["React","createContext","useEffect","useState","useContext","useStyles","connect","get_from_axios","WeatherToday","Try","WeatherForFavorite","Grid","Paper","Favorites","currentWeather","classes","favorites","favoritesData","location","fetchFavoritesCities","localStorage","JSON","parse","getItem","map","value","paper","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,EAAoDC,UAApD,EAAgEC,SAAhE,QAAiF,OAAjF,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;;AAIA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,cAAF;AAAkBP,EAAAA;AAAlB,CAAnB,EAAuD;AAAA;;AACnD,QAAMQ,OAAO,GAAGV,SAAS,EAAzB;AAEA,MAAIW,SAAS,GAAG,EAAhB;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,QAAQ,GAAG,QAAf;;AACA,QAAMC,oBAAoB,GAAG,MAAM;AAC/B,QAAIC,YAAY,CAACJ,SAAjB,EAA4B;AACxBA,MAAAA,SAAS,GAAGK,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,WAArB,CAAX,CAAZ;AACA;AACH;AACJ,GALD;;AAMArB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,oBAAoB;AACpB;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA,cAGK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgBK,GAAhB,CAAqBC,KAAD,iBACrB,QAAC,IAAD;AAAkB,MAAA,IAAI,MAAtB;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAG,GAAEV,OAAO,CAACW,KAAM;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF,OAAWD,KAAX;AAAA;AAAA;AAAA;AAAA,YADC;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GA/CQZ,S;UACWR,S;;;KADXQ,S;;AAgDT,MAAMc,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHd,IAAAA,cAAc,EAAEc,KAAK,CAACd;AADnB,GAAP;AAGH,CAJD;;AAKA,MAAMe,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHvB,IAAAA,cAAc,EAAGW,QAAD,IAAcY,QAAQ,CAACvB,cAAc,CAACW,QAAD,CAAf;AADnC,GAAP,CADmC,CAInC;AACH,CALD;;AAMA,eAAeZ,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,SAA7C,CAAf","sourcesContent":["import React, { createContext, useEffect, useState, useContext, useStyles } from 'react';\r\n// import AutomaticCities from './AutomaticCities';\r\nimport { connect } from 'react-redux';\r\nimport { get_from_axios } from './actions'\r\nimport WeatherToday from './WeatherToday'\r\nimport Try from './Try'\r\nimport WeatherForFavorite from './WeatherForFavorite';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n\r\nfunction Favorites({ currentWeather, get_from_axios }) {\r\n    const classes = useStyles();\r\n\r\n    let favorites = []\r\n    let favoritesData = []\r\n    let location = '215854'\r\n    const fetchFavoritesCities = () => {\r\n        if (localStorage.favorites) {\r\n            favorites = JSON.parse(localStorage.getItem('favorites'));\r\n            debugger;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchFavoritesCities()\r\n        debugger;\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {/* {<Try />} */}\r\n\r\n            {[0, 1, 2, 3, 4].map((value) => (\r\n            <Grid key={value} item>\r\n              <Paper className={`${classes.paper} weatherToNextDay`}>\r\n                {/* <span>date: {props.weatherForFive.Headline.EffectiveDate}</span> */}\r\n                {/* {console.log(props.weatherForFive)}\r\n                {console.log(days[(new Date(props.weatherForFive.DailyForecasts[value].Date.substring(0, 10))).getDay()])} */}\r\n                {/* <span>{((new Date(props.weatherForFive.DailyForecasts[value].Date.substring(0, 10))))}</span> */}\r\n                {/* <span className=\"day\">{days[(new Date(props.weatherForFive.DailyForecasts[value].Date.substring(0, 10))).getDay()]}     </span>\r\n                <span className=\"min\">Min: {props.weatherForFive.DailyForecasts[value].Temperature?.Minimum.Value}</span>\r\n                <span className=\"max\">Max: {props.weatherForFive.DailyForecasts[value].Temperature?.Maximum.Value}</span> */}\r\n              </Paper>\r\n\r\n            </Grid>\r\n          ))}\r\n            {/* {console.log(favoritesData)\r\n            }\r\n            {favoritesData.map(fav => {\r\n                debugger;\r\n                <h1>hghggj</h1>;\r\n                <Try />;\r\n                <WeatherToday weatherToday={fav} />;\r\n                \r\n            })} */}\r\n            \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentWeather: state.currentWeather,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        get_from_axios: (location) => dispatch(get_from_axios(location)),\r\n    }\r\n    // return {get_from_axios: (cur) => dispatch(get_from_axios(cur)) }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);"]},"metadata":{},"sourceType":"module"}