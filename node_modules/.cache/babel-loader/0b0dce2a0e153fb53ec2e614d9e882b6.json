{"ast":null,"code":"var _jsxFileName = \"F:\\\\programming\\\\\\u05E8\\u05D0\\u05D9\\u05D5\\u05E0\\u05D5\\u05EA\\\\project\\\\project\\\\src\\\\Favorites.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState, useContext } from 'react'; // import AutomaticCities from './AutomaticCities';\n\nimport { connect } from 'react-redux';\nimport { get_from_axios } from './actions';\nimport WeatherToday from './WeatherToday';\nimport Try from './Try';\nimport WeatherForFavorite from './WeatherForFavorite';\nimport Menu from './Menu';\nimport { pushToFavorites } from './actions';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Favorites(props) {\n  _s();\n\n  // const favorites = []\n  // let favoritesData = []\n  let location = '215854';\n  let data = [];\n  const classes = useStyles(); // const fetchFavoritesCities = () => {\n  //     if (localStorage.favorites) {\n  //         favorites = JSON.parse(localStorage.getItem('favorites'));\n  //         debugger;\n  //     }\n  // }\n  // useEffect(() => {\n  //     fetchFavoritesCities()\n  //     debugger;\n  // }, [])\n\n  const favoritesFromLocal = localStorage['favorites'] ? JSON.parse(localStorage['favorites']) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"FAVORITES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), (favoritesFromLocal.map(fav => (location = fav.cityKey, props.get_from_axios(location), data = props.currentWeather, props.pushToFavorites(data))), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      children: props.favorites.map(fav => {\n        var _fav$Temperature;\n\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: `${classes.paper} weatherToNextDay`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"c\",\n              children: [\"Min: \", (_fav$Temperature = fav.Temperature) === null || _fav$Temperature === void 0 ? void 0 : _fav$Temperature.Metric.Value]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) // \n    // <WeatherForFavorite cityKey={'45253'} cityName='Teresina' />\n    )]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this) // \n  ;\n}\n\n_s(Favorites, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c = Favorites;\n\nconst mapStateToProps = state => {\n  return {\n    favorites: state.favorites,\n    currentWeather: state.currentWeather\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    pushToFavorites: favFromLocal => dispatch(pushToFavorites(favFromLocal)),\n    get_from_axios: location => dispatch(get_from_axios(location))\n  }; // return {get_from_axios: (cur) => dispatch(get_from_axios(cur)) }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\n\nvar _c;\n\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"sources":["F:/programming/ראיונות/project/project/src/Favorites.js"],"names":["React","createContext","useEffect","useState","useContext","connect","get_from_axios","WeatherToday","Try","WeatherForFavorite","Menu","pushToFavorites","Grid","FormLabel","FormControlLabel","RadioGroup","Radio","Paper","Favorites","props","location","data","classes","useStyles","favoritesFromLocal","localStorage","JSON","parse","map","fav","cityKey","currentWeather","favorites","paper","Temperature","Metric","Value","mapStateToProps","state","mapDispatchToProps","dispatch","favFromLocal"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState, useContext } from 'react';\r\n// import AutomaticCities from './AutomaticCities';\r\nimport { connect } from 'react-redux';\r\nimport { get_from_axios } from './actions'\r\nimport WeatherToday from './WeatherToday'\r\nimport Try from './Try'\r\nimport WeatherForFavorite from './WeatherForFavorite';\r\nimport Menu from './Menu'\r\nimport { pushToFavorites } from './actions'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nfunction Favorites(props) {\r\n    // const favorites = []\r\n    // let favoritesData = []\r\n    let location = '215854'\r\n    let data = []\r\n    const classes = useStyles();\r\n\r\n    // const fetchFavoritesCities = () => {\r\n    //     if (localStorage.favorites) {\r\n    //         favorites = JSON.parse(localStorage.getItem('favorites'));\r\n    //         debugger;\r\n    //     }\r\n    // }\r\n    // useEffect(() => {\r\n    //     fetchFavoritesCities()\r\n    //     debugger;\r\n    // }, [])\r\n\r\n    const favoritesFromLocal = localStorage['favorites'] ? JSON.parse(localStorage['favorites']) : [];\r\n\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            <h1>FAVORITES</h1>\r\n            {\r\n                favoritesFromLocal.map((fav) => (\r\n                    location = fav.cityKey,\r\n                    props.get_from_axios(location),\r\n                    data = props.currentWeather,\r\n                    props.pushToFavorites(data)\r\n                )),\r\n\r\n                <Grid container justifyContent=\"center\">\r\n                {props.favorites.map((fav) => (\r\n                  <Grid>\r\n                    <Paper className={`${classes.paper} weatherToNextDay`}>\r\n                      {/* <span>date: {props.weatherForFive.Headline.EffectiveDate}</span> */}\r\n                      {/* {console.log(props.weatherForFive)} */}\r\n                      {/* {console.log(days[(new Date(props.weatherForFive.DailyForecasts[value].Date.substring(0, 10))).getDay()])} */}\r\n                      {/* <span>{((new Date(props.weatherForFive.DailyForecasts[value].Date.substring(0, 10))))}</span> */}\r\n                      {/* <span className=\"day\">{days[(new Date(props.weatherForFive.DailyForecasts[value].Date.substring(0, 10))).getDay()]}     </span> */}\r\n                      <span className=\"c\">Min: {fav.Temperature?.Metric.Value}</span>\r\n                      {/* <span className=\"max\">Max: {props.weatherForFive.DailyForecasts[value].Temperature?.Maximum.Value}</span> */}\r\n                    </Paper>\r\n      \r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n                // \r\n                // <WeatherForFavorite cityKey={'45253'} cityName='Teresina' />\r\n            }\r\n        </div>\r\n        // \r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        favorites: state.favorites,\r\n        currentWeather: state.currentWeather,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        pushToFavorites: (favFromLocal) => dispatch(pushToFavorites(favFromLocal)),\r\n        get_from_axios: (location) => dispatch(get_from_axios(location)),\r\n    }\r\n    // return {get_from_axios: (cur) => dispatch(get_from_axios(cur)) }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);"]},"metadata":{},"sourceType":"module"}