{"ast":null,"code":"var _jsxFileName = \"F:\\\\programming\\\\\\u05E8\\u05D0\\u05D9\\u05D5\\u05E0\\u05D5\\u05EA\\\\project\\\\project\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState, useContext, useRef, useStyles } from 'react';\nimport Search from './Search';\nimport WeatherView from './WeatherView';\nimport TelAvivContext from './TelAvivContext';\nimport { get_from_axios, fetchDailyForecast, fetchSearchResult } from './actions';\nimport { connect } from 'react-redux';\nimport WeatherForFive from './SpacingGrid';\nimport WeatherToday from './WeatherToday';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Button } from '@material-ui/core';\nimport Fab from '@material-ui/core/Fab';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home({\n  currentWeather,\n  get_from_axios,\n  dailyForecasts,\n  fetchDailyForecast,\n  autocompleteResults,\n  fetchSearchResult\n}) {\n  _s();\n\n  let location = '215854';\n  let text = \"Tel-Aviv\";\n  let exists = false;\n  const [cityName, setCityName] = useState('Tel Aviv');\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [existsInFavorites, setExistsInFavorites] = useState(true);\n  const timer = useRef(); // let txtToSearch = ''\n  // const [textToSearch, setTextToSearch] = useState(\"Tel-Aviv\");\n\n  const iSExistsInFavorites = () => {\n    let fav = [];\n\n    if (localStorage.favorites) {\n      fav = JSON.parse(localStorage.getItem('favorites'));\n    }\n\n    fav.map(f => {\n      if (f.cityName = 'Tel Aviv') {\n        setExistsInFavorites(false);\n      }\n    });\n  };\n\n  const getAxios = e => {\n    text = e;\n    debugger;\n    fetchSearchResult(text);\n  };\n\n  const addToFavorites = () => {\n    let fav = [];\n    let city = {\n      cityName,\n      location\n    };\n\n    if (localStorage.favorites) {\n      fav = JSON.parse(localStorage.getItem('favorites'));\n    }\n\n    fav.push(city);\n    localStorage.setItem('favorites', JSON.stringify(fav));\n    console.log(city);\n\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = window.setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n      }, 2000);\n    }\n  }; // const getContent = (e) => {\n  //     debugger\n  //     console.log(e)\n  // }\n  // useEffect(() => {\n  //     debugger;\n  //     console.log(textToSearch)\n  //     fetchSearchResult(textToSearch)\n  // }, textToSearch)\n\n\n  const getDataCity = selectedCity => {\n    setCityName(selectedCity);\n    autocompleteResults === null || autocompleteResults === void 0 ? void 0 : autocompleteResults.map(city => {\n      if (city.LocalizedName == selectedCity) {\n        location = city.Key;\n        exists = true; // text = selectedCity\n\n        debugger;\n      }\n    });\n\n    if (exists == true) {\n      get_from_axios(location);\n      fetchDailyForecast(location);\n    }\n  };\n\n  useEffect(() => {\n    get_from_axios(location);\n    fetchDailyForecast(location);\n    iSExistsInFavorites();\n  }, []);\n  useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search\",\n      placeholder: \"Search...\",\n      type: \"text\",\n      list: \"browsers\",\n      name: \"inputCities\",\n      onfocusout: e => {\n        console.log(e);\n      },\n      onChange: e => {\n        getAxios(e.target.value);\n      },\n      onBlur: e => {\n        getDataCity(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), console.log(fetchSearchResult), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: \"browsers\",\n      children: autocompleteResults ? autocompleteResults.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: city.LocalizedName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"no data!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"blue\",\n      className: addToFavorites,\n      disabled: existsInFavorites,\n      onClick: addToFavorites,\n      children: \"Add To Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fab, {\n      \"aria-label\": \"save\",\n      color: \"blue\",\n      className: addToFavorites,\n      onClick: addToFavorites,\n      children: success ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AllView\",\n      children: [console.log(currentWeather), /*#__PURE__*/_jsxDEV(WeatherToday, {\n        weatherToday: currentWeather,\n        cityName: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForFive, {\n        weatherToday: currentWeather,\n        weatherForFive: dailyForecasts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"4ZSzyIpCHvwpduF7zLKHXX4IiG4=\");\n\n_c = Home;\n\nconst mapStateToProps = state => {\n  return {\n    currentWeather: state.currentWeather,\n    dailyForecasts: state.dailyForecasts,\n    autocompleteResults: state.autocompleteResults\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    get_from_axios: location => dispatch(get_from_axios(location)),\n    fetchDailyForecast: location => dispatch(fetchDailyForecast(location)),\n    fetchSearchResult: text => dispatch(fetchSearchResult(text))\n  }; // return {get_from_axios: (cur) => dispatch(get_from_axios(cur)) }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["F:/programming/ראיונות/project/project/src/Home.js"],"names":["React","createContext","useEffect","useState","useContext","useRef","useStyles","Search","WeatherView","TelAvivContext","get_from_axios","fetchDailyForecast","fetchSearchResult","connect","WeatherForFive","WeatherToday","FavoriteIcon","IconButton","Button","Fab","CheckIcon","CircularProgress","Home","currentWeather","dailyForecasts","autocompleteResults","location","text","exists","cityName","setCityName","success","setSuccess","loading","setLoading","existsInFavorites","setExistsInFavorites","timer","iSExistsInFavorites","fav","localStorage","favorites","JSON","parse","getItem","map","f","getAxios","e","addToFavorites","city","push","setItem","stringify","console","log","current","window","setTimeout","getDataCity","selectedCity","LocalizedName","Key","clearTimeout","target","value","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState, useContext, useRef, useStyles } from 'react';\r\nimport Search from './Search';\r\nimport WeatherView from './WeatherView';\r\nimport TelAvivContext from './TelAvivContext';\r\nimport { get_from_axios, fetchDailyForecast, fetchSearchResult } from './actions'\r\nimport { connect } from 'react-redux';\r\nimport WeatherForFive from './SpacingGrid'\r\nimport WeatherToday from './WeatherToday'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Button } from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\nfunction Home({ currentWeather, get_from_axios, dailyForecasts, fetchDailyForecast, autocompleteResults, fetchSearchResult }) {\r\n    let location = '215854'\r\n    let text = \"Tel-Aviv\"\r\n    let exists = false\r\n    const [cityName, setCityName] = useState('Tel Aviv')\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [existsInFavorites, setExistsInFavorites] = useState(true);\r\n    const timer = useRef();\r\n\r\n    // let txtToSearch = ''\r\n    // const [textToSearch, setTextToSearch] = useState(\"Tel-Aviv\");\r\n    const iSExistsInFavorites = () => {\r\n        let fav = []\r\n        if (localStorage.favorites) {\r\n            fav = JSON.parse(localStorage.getItem('favorites'));\r\n        }\r\n        fav.map(f => {\r\n            if (f.cityName = 'Tel Aviv'){\r\n                setExistsInFavorites(false)\r\n            }\r\n        })\r\n    }\r\n    const getAxios = (e) => {\r\n        text = e\r\n        debugger;\r\n        fetchSearchResult(text)\r\n    }\r\n\r\n    const addToFavorites = () => {\r\n        let fav = []\r\n        let city = { cityName, location }\r\n        if (localStorage.favorites) {\r\n            fav = JSON.parse(localStorage.getItem('favorites'));\r\n        }\r\n        fav.push(city);\r\n        localStorage.setItem('favorites', JSON.stringify(fav));\r\n        console.log(city);\r\n\r\n        if (!loading) {\r\n            setSuccess(false);\r\n            setLoading(true);\r\n            timer.current = window.setTimeout(() => {\r\n                setSuccess(true);\r\n                setLoading(false);\r\n\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    // const getContent = (e) => {\r\n    //     debugger\r\n    //     console.log(e)\r\n    // }\r\n    // useEffect(() => {\r\n    //     debugger;\r\n    //     console.log(textToSearch)\r\n    //     fetchSearchResult(textToSearch)\r\n    // }, textToSearch)\r\n\r\n    const getDataCity = (selectedCity) => {\r\n        setCityName(selectedCity)\r\n        autocompleteResults?.map(city => {\r\n            if (city.LocalizedName == selectedCity) {\r\n                location = city.Key\r\n                exists = true\r\n                // text = selectedCity\r\n                debugger;\r\n            }\r\n        })\r\n        if (exists == true) {\r\n            get_from_axios(location);\r\n            fetchDailyForecast(location);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        get_from_axios(location);\r\n        fetchDailyForecast(location);\r\n        iSExistsInFavorites()\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n        return () => {\r\n            clearTimeout(timer.current);\r\n        };\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <input className=\"search\" placeholder=\"Search...\" type=\"text\" list=\"browsers\" name=\"inputCities\" onfocusout={(e) => { console.log(e) }}\r\n                onChange={(e) => { getAxios(e.target.value) }}\r\n                onBlur={(e) => { getDataCity(e.target.value) }} />\r\n            {/* {console.log(textToSearch)} */}\r\n            {console.log(fetchSearchResult)}\r\n            <datalist id=\"browsers\">\r\n                {autocompleteResults ? autocompleteResults.map(city =>\r\n                (\r\n                    <option>{city.LocalizedName}</option>\r\n                )) : <div>no data!</div>}\r\n            </datalist>\r\n            {/* <IconButton className=\"addToFavorite\" aria-label=\"favorite\" onClick={() =>{}}>\r\n            <FavoriteIcon />\r\n          </IconButton> */}\r\n            {/* <Button variant=\"outlined\" color=\"primary\">\r\n                Add ro Favorite\r\n            </Button> */}\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"blue\"\r\n                className={addToFavorites}\r\n                disabled={existsInFavorites}\r\n                onClick={addToFavorites}\r\n            >\r\n                Add To Favorites\r\n            </Button>\r\n            {/* {loading && <CircularProgress size={24} className={classes.buttonProgress} />} */}\r\n\r\n            <Fab\r\n                aria-label=\"save\"\r\n                color=\"blue\"\r\n                className={addToFavorites}\r\n                onClick={addToFavorites}\r\n            >\r\n                {success ? <CheckIcon /> : <FavoriteIcon />}\r\n            </Fab>\r\n            {/* {loading && <CircularProgress size={68} className={classes.fabProgress} />} */}\r\n            <div className=\"AllView\">\r\n                {console.log(currentWeather)}\r\n                <WeatherToday weatherToday={currentWeather} cityName={cityName} />\r\n                <WeatherForFive weatherToday={currentWeather} weatherForFive={dailyForecasts} /></div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentWeather: state.currentWeather,\r\n        dailyForecasts: state.dailyForecasts,\r\n        autocompleteResults: state.autocompleteResults\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        get_from_axios: (location) => dispatch(get_from_axios(location)),\r\n        fetchDailyForecast: (location) => dispatch(fetchDailyForecast(location)),\r\n        fetchSearchResult: (text) => dispatch(fetchSearchResult(text))\r\n    }\r\n    // return {get_from_axios: (cur) => dispatch(get_from_axios(cur)) }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}